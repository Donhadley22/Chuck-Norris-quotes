name: CI/CD Pipeline for Node.js App

on:
  push:
    branches:
      - main

jobs:
  # 1. Run Unit Tests
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm test  # Ensure you have a test script in package.json

  # 2. Apply Terraform and Capture EC2 IP/DNS
  terraform:
    name: Apply Terraform and Capture EC2 IP/DNS
    runs-on: ubuntu-latest
    needs: test  # Run this job only after tests pass

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Set up AWS credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      # Run Terraform Init
      - name: Terraform Init
        working-directory: terraform  # Specify the correct directory for Terraform commands
        run: terraform init

      # Run Terraform Plan
      - name: Terraform Plan
        working-directory: terraform  # Specify the correct directory for Terraform commands
        run: terraform plan

      # Run Terraform Apply
      - name: Terraform Apply
        working-directory: terraform  # Specify the correct directory for Terraform commands
        run: terraform apply -auto-approve

     